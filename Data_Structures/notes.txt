Data Structure
  - Ways of organizing information with optimal 'runtime complexity' for adding, editting, or removing records.
  - Javascript natively implements several data structures. You will still be asked about 'inferior' data structures.
______________________________________________________________________________________________________________________
The Queue:
  - A Queue is a linear structure which follows a particular order in which the operations are performed.
  - The order is First In First Out (FIFO).
      $element1, $element2 ----Enqueue(add)---> [queue] ----Dequeue(remove)---> $element1, $element2
______________________________________________________________________________________________________________________
The Stack:
  - Stack is a linear data structure in which addition or removal of element follows a particular order
    LIFO(Last in First Out) AND FILO(First in Last Out).
      $element1, $element2 ----Enqueue(add)---> [queue] ----Dequeue(remove)---> $element2, $element1
______________________________________________________________________________________________________________________
Linked List:
  - A linked list is a linear data structure, in which the elements are not stored at contiguous memory locations.
  - The elements in a linked list are linked using pointers.
  - Node: is the element of Linked List.
  - Head: is the first Node in the Linked List.
  - Tail: is the last Node in the Linked List.
  - The Node contain two parts: Data, and The reference to Next Node.
  - The reference part in the Tail refere to Null.
______________________________________________________________________________________________________________________
Generators:
  - The function* declaration (function keyword followed by an asterisk) defines a generator function, 
  which returns a Generator object.
  function* generator(i) {
    yield i;
    yield i + 10;
  }
  const gen = generator(10);
  console.log(gen.next().value);
  // expected output: 10
  console.log(gen.next().value);
  // expected output: 20
______________________________________________________________________________________________________________________
Tree:
  - A tree is non-linear and a hierarchical data structure consisting of a collection of nodes such that each node of 
    the tree stores a value and a list of references to other nodes (the “children”).
  - Node: is the element of the Tree.
  - Child: is any node that is directly underneath a given node.
  - every Node has a data and a reference to children.
  - Sibling: Children of the same parent node are called siblings.
  - trees can be traversed in different ways.
  - There are two big ways to iterating through a tree:
    * Breadth-First traversal.
    * Depth-First traversal.
______________________________________________________________________________________________________________________