Jest
  - Jest is a delightful JavaScript Testing Framework with a focus on simplicity.
  - It works with projects using: Babel, TypeScript, Node, React, Angular, Vue and more!
________________________________________________________________________________________________________
Wherever passibole, I really recommended you avoid writing for loops in the kind of very classic syntax:
    for(var i= 0; i<str.length; i++) {} //this is classic syntax
because you may make a typo..
________________________________________________________________________________________________________
The split() method splits a string into an array of substrings.
________________________________________________________________________________________________________
The join() method returns an array as a string. The join() method does not change the original array.
Any separator can be specified.
________________________________________________________________________________________________________
reduce() method in JavaScript is used to reduce the array to a single value and executes a provided
function for each value of the array (from left-to-right) and the return value of the function is
stored in an accumulator.
________________________________________________________________________________________________________
The every() method tests whether all elements in the array pass the test implemented by the provided 
function. It returns a Boolean value.
________________________________________________________________________________________________________
The toString() method returns a string representing the object.
________________________________________________________________________________________________________
The parseInt() function parses a string argument and returns an integer of the specified radix.
parseInt(string)
parseInt(string, radix)
________________________________________________________________________________________________________
The Math.sign() function returns either a positive or negative +/- 1, indicating the sign of a number 
passed into the argument. If the number passed into Math.sign() is 0, it will return a +/- 0.
Note that if the number is positive, an explicit (+) will not be returned.
________________________________________________________________________________________________________
What is the difference between ( for... in ) and ( for... of ) statements?
  - for in loops over enumerable property names of an object.
  - for of (new in ES6) does use an object-specific iterator and loops over the values generated by that.
________________________________________________________________________________________________________
The slice() method returns a shallow copy of a portion of an array into a new array object selected from 
start to end (end not included) where start and end represent the index of items in that array. The 
original array will not be modified.

const animals = ['ant', 'bison', 'camel', 'duck', 'elephant'];

console.log(animals.slice(2));
// expected output: Array ["camel", "duck", "elephant"]

console.log(animals.slice(2, 4));
// expected output: Array ["camel", "duck"]

console.log(animals.slice(1, 5));
// expected output: Array ["bison", "camel", "duck", "elephant"]

console.log(animals.slice(-2));
// expected output: Array ["duck", "elephant"]

console.log(animals.slice(2, -1));
// expected output: Array ["camel", "duck"]

console.log(animals.slice());
// expected output: Array ["ant", "bison", "camel", "duck", "elephant"]
________________________________________________________________________________________________________
The Array.from() static method creates a new, shallow-copied Array instance from an iterable 
or array-like object.

console.log(Array.from([1, 2, 3], x => x + x));
// expected output: Array [2, 4, 6]
________________________________________________________________________________________________________
RegExp
  - The RegExp object is used for matching text with a pattern.
  - There are two ways to create a RegExp object: a literal notation and a constructor.
    * The literal notation takes a pattern between two slashes, followed by optional flags, after the second slash.
    * The constructor function takes either a string or a RegExp object as its first parameter and a string of 
    optional flags as its second parameter.
  The following three expressions create the same regular expression object:
    const re = /ab+c/i; // literal notation
    // OR
    const re = new RegExp('ab+c', 'i'); // constructor with string pattern as first argument
    // OR
    const re = new RegExp(/ab+c/, 'i'); // constructor with regular expression literal as first argument
________________________________________________________________________________________________________
The Object.keys() method returns an array of a given object's own enumerable property names, 
iterated in the same order that a normal loop would.
________________________________________________________________________________________________________